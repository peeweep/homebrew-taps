name: Check Formula
on:
  pull_request:
    paths:
      - "Formula/*.rb"

jobs:
  # From https://github.com/AOSC-Dev/aosc-os-abbs/blob/ee560b97321637d7bd9a6c6d30a2cffbad62be03/.github/workflows/build-packages.yml#L67
  get-packages:
    if: ${{ (github.base_ref == 'master') && (github.actor == 'peeweep') }}
    runs-on: ubuntu-latest
    steps:
      - name: Set up Homebrew
        id: set-up-homebrew
        uses: Homebrew/actions/setup-homebrew@master

      - name: Get packages from commits
        uses: actions/github-script@v5
        id: get-packages-from-commits
        with:
          script: |
            let args = "";
            const options = {};
            options.listeners = {
              stdout: (data) => {
                args += data.toString();
              }
            };
            await exec.exec('git', ['merge-base', 'origin/master', 'HEAD'], options);
            const parent = args.split('\n');
            args = "";
            await exec.exec('git', ['diff', '--name-only', parent[0], 'HEAD', 'Formula/*.rb'], options);
            const regex = /.*\/(.*)\.rb/;
            const packages = args.split('\n').map(arg => regex.exec(arg)).filter(arg => Array.isArray(arg)).map(arg => arg[1]);
            if (!Array.isArray(packages) || packages.length == 0) return;
            return packages;

    outputs:
      matrix: ${{steps.get-packages-from-commits.outputs.result}}


  check-formula:
    needs: get-packages
    if: ${{needs.get-packages.outputs.matrix}}
    strategy:
      matrix:
        os: [macos-11]
        xcode: ["13.2"]
        package: ${{fromJson(needs.get-packages.outputs.matrix)}}
    runs-on: ${{ matrix.os }}
    env:
      DEVELOPER_DIR:  /Applications/Xcode_${{ matrix.xcode }}.app

    steps:
      - name: Set up Homebrew
        id: set-up-homebrew
        uses: Homebrew/actions/setup-homebrew@master

      - name: Build bottle
        env:
          PACKAGE: ${{matrix.package}}
          TAPS_NAME: peeweep/taps
          ROOT_URL: https://ghcr.io/v2/${{ github.repository }}
        run: |
          brew install --build-bottle ${PACKAGE}
          # brew bottle ${TAPS_NAME}/${PACKAGE} --keep-old --root-url="${ROOT_URL}" --json
          brew bottle ${TAPS_NAME}/${PACKAGE} --root-url="${ROOT_URL}" --json

      - name: Cache Homebrew Bundler RubyGems
        id: cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.set-up-homebrew.outputs.gems-path }}
          key: ${{ runner.os }}-rubygems-${{ steps.set-up-homebrew.outputs.gems-hash }}
          restore-keys: ${{ runner.os }}-rubygems-

      - name: Install Homebrew Bundler RubyGems
        if: steps.cache.outputs.cache-hit != 'true'
        run: brew install-bundler-gems

      - name: Test formula
        env:
          PACKAGE: ${{matrix.package}}
        run: brew test ${PACKAGE}

      - name: Audit strict formula
        env:
          PACKAGE: ${{matrix.package}}
        run: brew audit --strict ${PACKAGE}

      - name: Audit new formula
        env:
          PACKAGE: ${{matrix.package}}
        run: brew audit --new ${PACKAGE}

